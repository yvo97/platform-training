apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: c4p-service
spec:
  template:
    metadata:
      annotations:  
        autoscaling.knative.dev/min-scale: "1"
    spec:
      containerConcurrency: 0
      containers:
        - image: ko://github.com/salaboy/platforms-on-k8s/conference-application/c4p-service
          name: user-container
          env:
          - name: KAFKA_URL
            value: kafka.default.svc.cluster.local:9092 
          - name: POSTGRES_HOST
            value: postgres-postgresql.default.svc.cluster.local
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-postgresql
                key: postgres-password
          - name: POD_NODENAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName      
          livenessProbe:
            httpGet:
              path: /health/readiness
              port: 8080
          readinessProbe:
            httpGet:
              path: /health/liveness
              port: 8080